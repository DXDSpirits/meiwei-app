// UTILITY MIXINS
// --------------------------------------------------

// Clearfix
// --------
// For clearing floats like a boss h5bp.com/q
@mixin clearfix {
	*zoom: 1;
	&:before, &:after {
		display: table;
		content: "";
		// Fixes Opera/contenteditable bug: http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
		line-height: 0;
	}
	&:after {
		clear: both;
	}
}

// Center-align a block level element
// ----------------------------------
@mixin center-block() {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clear iOS tap highlight
@mixin clear-tap-highlight() {
	-webkit-tap-highlight-color: rgba(0,0,0,0);
}

// Clear outline
@mixin clear-outline() {
	outline: 0;
	outline-style:none;
	outline-width:0;
}

// Sizing shortcuts
// -------------------------
@mixin size($height, $width) {
	width: $width;
	height: $height;
}
@mixin square($size) {
	@include size($size, $size);
}

// Placeholder text
// -------------------------
@mixin placeholder($color: $placeholderText) {
	&:-moz-placeholder { color: $color; }
	&:-ms-input-placeholder { color: $color; }
	&::-webkit-input-placeholder { color: $color; }
}

// Text overflow
// -------------------------
// Requires inline-block or block for proper styling
@mixin text-overflow() {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

// CSS image replacement
// -------------------------
// Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757
@mixin hide-text {
	font: 0/0 a;
	color: transparent;
	text-shadow: none;
	background-color: transparent;
	border: 0;
}

// Horizontal dividers
// -------------------------
// Dividers (basically an hr) within dropdowns and nav lists
@mixin nav-divider($top: #e5e5e5, $bottom: $white) {
	height: 1px;
	margin: (($baseLineHeight / 2) - 1) 1px; // 8px 1px
	overflow: hidden;
	background-color: $top;
	border-bottom: 1px solid $bottom;
}

// Scrollable
// -------------------------
@mixin scrollable($scrollbarWidth: 0) {
	overflow: auto;
	-webkit-overflow-scrolling: touch;
	&::-webkit-scrollbar {
		@if ($scrollbarWidth == 0) {
			display: none;
		} @else {
			width: $scrollbarWidth;
		}
	}
}

// Border Shorthand
// -------------------------
@mixin border($width, $style, $color) {
	border-width: $width;
	border-style: $style;
	border-color: $color;
}


// FONTS
// --------------------------------------------------

@mixin font-family-serif() {
	font-family: $serifFontFamily;
}
@mixin font-family-sans-serif() {
	font-family: $sansFontFamily;
}
@mixin font-family-monospace() {
	font-family: $monoFontFamily;
}
@mixin font-shorthand($size: $baseFontSize, $weight: normal, $lineHeight: $baseLineHeight) {
	font-size: $size;
	font-weight: $weight;
	line-height: $lineHeight;
}
@mixin font-serif($size: $baseFontSize, $weight: normal, $lineHeight: $baseLineHeight) {
	@include font-family-serif();
	@include font-shorthand($size, $weight, $lineHeight);
}
@mixin font-sans-serif($size: $baseFontSize, $weight: normal, $lineHeight: $baseLineHeight) {
	@include font-family-sans-serif();
	@include font-shorthand($size, $weight, $lineHeight);
}
@mixin font-monospace($size: $baseFontSize, $weight: normal, $lineHeight: $baseLineHeight) {
	@include font-family-monospace();
	@include font-shorthand($size, $weight, $lineHeight);
}


// CSS3 PROPERTIES
// --------------------------------------------------

// Border Radius
@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	   -moz-border-radius: $radius;
	        border-radius: $radius;
}

// Single Corner Border Radius
@mixin border-top-left-radius($radius) {
	-webkit-border-top-left-radius: $radius;
	    -moz-border-radius-topleft: $radius;
	        border-top-left-radius: $radius;
}
@mixin border-top-right-radius($radius) {
	-webkit-border-top-right-radius: $radius;
	    -moz-border-radius-topright: $radius;
	        border-top-right-radius: $radius;
}
@mixin border-bottom-right-radius($radius) {
	-webkit-border-bottom-right-radius: $radius;
	    -moz-border-radius-bottomright: $radius;
	        border-bottom-right-radius: $radius;
}
@mixin border-bottom-left-radius($radius) {
	-webkit-border-bottom-left-radius: $radius;
	    -moz-border-radius-bottomleft: $radius;
	        border-bottom-left-radius: $radius;
}

// Single Side Border Radius
@mixin border-top-radius($radius) {
	@include border-top-right-radius($radius);
	@include border-top-left-radius($radius);
}
@mixin border-right-radius($radius) {
	@include border-top-right-radius($radius);
	@include border-bottom-right-radius($radius);
}
@mixin border-bottom-radius($radius) {
	@include border-bottom-right-radius($radius);
	@include border-bottom-left-radius($radius);
}
@mixin border-left-radius($radius) {
	@include border-top-left-radius($radius);
	@include border-bottom-left-radius($radius);
}

// Drop shadows
@mixin box-shadow($shadow...) {
	-webkit-box-shadow: $shadow;
	   -moz-box-shadow: $shadow;
	        box-shadow: $shadow;
}

// Transitions
@mixin transition($transition...) {
	-webkit-transition: $transition;
	   -moz-transition: $transition;
	     -o-transition: $transition;
	        transition: $transition;
}
@mixin transition-delay($transition-delay) {
	-webkit-transition-delay: $transition-delay;
	   -moz-transition-delay: $transition-delay;
	     -o-transition-delay: $transition-delay;
	        transition-delay: $transition-delay;
}
@mixin transition-duration($transition-duration) {
	-webkit-transition-duration: $transition-duration;
	   -moz-transition-duration: $transition-duration;
	     -o-transition-duration: $transition-duration;
	        transition-duration: $transition-duration;
}

// Transformations
@mixin rotate($degrees) {
	-webkit-transform: rotate($degrees);
	   -moz-transform: rotate($degrees);
	    -ms-transform: rotate($degrees);
	     -o-transform: rotate($degrees);
	        transform: rotate($degrees);
}
// Transformations
@mixin rotateY($degrees) {
	-webkit-transform: rotateY($degrees);
	   -moz-transform: rotateY($degrees);
	    -ms-transform: rotateY($degrees);
	     -o-transform: rotateY($degrees);
	        transform: rotateY($degrees);
}
@mixin scale($ratio) {
	-webkit-transform: scale($ratio);
	   -moz-transform: scale($ratio);
	    -ms-transform: scale($ratio);
	     -o-transform: scale($ratio);
	        transform: scale($ratio);
}
@mixin translate($x, $y) {
	-webkit-transform: translate($x, $y);
	   -moz-transform: translate($x, $y);
	    -ms-transform: translate($x, $y);
	     -o-transform: translate($x, $y);
	        transform: translate($x, $y);
}
@mixin skew($x, $y) {
	-webkit-transform: skew($x, $y);
	   -moz-transform: skew($x, $y);
	    -ms-transform: skewX($x) skewY($y); // See https://github.com/twitter/bootstrap/issues/4885
	     -o-transform: skew($x, $y);
	        transform: skew($x, $y);
	-webkit-backface-visibility: hidden; // See https://github.com/twitter/bootstrap/issues/5319
}
@mixin translate3d($x, $y, $z) {
	-webkit-transform: translate3d($x, $y, $z);
	   -moz-transform: translate3d($x, $y, $z);
	     -o-transform: translate3d($x, $y, $z);
	        transform: translate3d($x, $y, $z);
}

// Animations
@mixin keyframes($name) {
	@-webkit-keyframes #{$name} { @content; }
	   @-moz-keyframes #{$name} { @content; }
	     @-o-keyframes #{$name} { @content; }
	        @keyframes #{$name} { @content; }
}

@mixin keyframes-transform($name, $from, $to) {
	@-webkit-keyframes #{$name} { from { -webkit-transform: $from; } to { -webkit-transform: $to; } }
	   @-moz-keyframes #{$name} { from {    -moz-transform: $from; } to {    -moz-transform: $to; } }
	     @-o-keyframes #{$name} { from {      -o-transform: $from; } to {      -o-transform: $to; } }
	        @keyframes #{$name} { from {         transform: $from; } to {         transform: $to; } }
}

@mixin animation($animation...) {
	-webkit-animation: $animation;
	   -moz-animation: $animation;
	     -o-animation: $animation;
	        animation: $animation;
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
@mixin backface-visibility($visibility){
	-webkit-backface-visibility: $visibility;
	   -moz-backface-visibility: $visibility;
	        backface-visibility: $visibility;
}

// Background clipping
// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
@mixin background-clip($clip) {
	-webkit-background-clip: $clip;
	   -moz-background-clip: $clip;
	        background-clip: $clip;
}

// Background sizing
@mixin background-size($size...) {
	-webkit-background-size: $size;
	   -moz-background-size: $size;
	     -o-background-size: $size;
	        background-size: $size;
}

// Box sizing
@mixin box-sizing($boxmodel) {
	-webkit-box-sizing: $boxmodel;
	   -moz-box-sizing: $boxmodel;
	        box-sizing: $boxmodel;
}

// User select
// For selecting text on the page
@mixin user-select($select) {
	-webkit-user-select: $select;
	   -moz-user-select: $select;
	    -ms-user-select: $select;
	     -o-user-select: $select;
	        user-select: $select;
}

// Resize anything
@mixin resizable($direction) {
	resize: $direction; // Options: horizontal, vertical, both
	overflow: auto; // Safari fix
}

// CSS3 Content Columns
@mixin content-columns($columnCount, $columnGap: $gridGutterWidth) {
	-webkit-column-count: $columnCount;
	   -moz-column-count: $columnCount;
	        column-count: $columnCount;
	-webkit-column-gap: $columnGap;
	   -moz-column-gap: $columnGap;
	        column-gap: $columnGap;
}

// Optional hyphenation
@mixin hyphens($mode: auto) {
	word-wrap: break-word;
	-webkit-hyphens: $mode;
	   -moz-hyphens: $mode;
	    -ms-hyphens: $mode;
	     -o-hyphens: $mode;
	        hyphens: $mode;
}

// Opacity
@mixin opacity($opacity) {
	opacity: $opacity / 100;
	filter: alpha(opacity=$opacity);
}

// CSS3 webkit flexbox
@mixin flexible($flex: 1) {
	width: 1px;
	-webkit-box-flex: $flex;
}

@mixin flex-box($orient: vertical, $direction: normal, $pack: center, $align: center) {
	display: -webkit-box;
	-webkit-box-orient: $orient;	
	-webkit-box-direction: $direction;
	-webkit-box-pack: $pack;
	-webkit-box-align: $align;
	> .flexible {
		@include flexible();
	}
}
